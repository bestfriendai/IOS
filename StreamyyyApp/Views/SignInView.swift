//
//  SignInView.swift
//  StreamyyyApp
//
//  Real authentication sign in view
//

import SwiftUI

struct SignInView: View {
    @Binding var isPresented: Bool
    @StateObject private var authService = AuthenticationService.shared
    @StateObject private var clerkManager = ClerkManager.shared
    
    @State private var email = ""
    @State private var password = ""
    @State private var showingPassword = false
    @State private var showingForgotPassword = false
    @State private var isLoading = false
    @State private var errorMessage = ""
    @State private var showingError = false
    
    var body: some View {
        NavigationView {
            ZStack {
                backgroundGradient
                
                ScrollView {
                    VStack(spacing: 32) {
                        // Header
                        VStack(spacing: 16) {\n                            Image(systemName: "person.badge.key.fill")\n                                .font(.system(size: 60))\n                                .foregroundColor(.cyan)\n                            \n                            Text("Welcome Back")\n                                .font(.largeTitle)\n                                .fontWeight(.bold)\n                                .foregroundColor(.white)\n                            \n                            Text("Sign in to your StreamHub account")\n                                .font(.subheadline)\n                                .foregroundColor(.white.opacity(0.7))\n                                .multilineTextAlignment(.center)\n                        }\n                        .padding(.top, 40)\n                        \n                        // Sign In Form\n                        VStack(spacing: 20) {\n                            // Email Field\n                            VStack(alignment: .leading, spacing: 8) {\n                                Text("Email")\n                                    .font(.subheadline)\n                                    .fontWeight(.medium)\n                                    .foregroundColor(.white)\n                                \n                                HStack {\n                                    Image(systemName: "envelope")\n                                        .foregroundColor(.white.opacity(0.6))\n                                        .frame(width: 20)\n                                    \n                                    TextField("Enter your email", text: $email)\n                                        .textFieldStyle(PlainTextFieldStyle())\n                                        .foregroundColor(.white)\n                                        .autocapitalization(.none)\n                                        .autocorrectionDisabled()\n                                        .keyboardType(.emailAddress)\n                                }\n                                .padding()\n                                .background(\n                                    RoundedRectangle(cornerRadius: 12)\n                                        .fill(Color.white.opacity(0.1))\n                                        .overlay(\n                                            RoundedRectangle(cornerRadius: 12)\n                                                .stroke(Color.white.opacity(0.2), lineWidth: 1)\n                                        )\n                                )\n                            }\n                            \n                            // Password Field\n                            VStack(alignment: .leading, spacing: 8) {\n                                Text("Password")\n                                    .font(.subheadline)\n                                    .fontWeight(.medium)\n                                    .foregroundColor(.white)\n                                \n                                HStack {\n                                    Image(systemName: "lock")\n                                        .foregroundColor(.white.opacity(0.6))\n                                        .frame(width: 20)\n                                    \n                                    Group {\n                                        if showingPassword {\n                                            TextField("Enter your password", text: $password)\n                                        } else {\n                                            SecureField("Enter your password", text: $password)\n                                        }\n                                    }\n                                    .textFieldStyle(PlainTextFieldStyle())\n                                    .foregroundColor(.white)\n                                    \n                                    Button(action: {\n                                        showingPassword.toggle()\n                                    }) {\n                                        Image(systemName: showingPassword ? "eye.slash" : "eye")\n                                            .foregroundColor(.white.opacity(0.6))\n                                    }\n                                }\n                                .padding()\n                                .background(\n                                    RoundedRectangle(cornerRadius: 12)\n                                        .fill(Color.white.opacity(0.1))\n                                        .overlay(\n                                            RoundedRectangle(cornerRadius: 12)\n                                                .stroke(Color.white.opacity(0.2), lineWidth: 1)\n                                        )\n                                )\n                            }\n                            \n                            // Forgot Password\n                            HStack {\n                                Spacer()\n                                Button("Forgot Password?") {\n                                    showingForgotPassword = true\n                                }\n                                .font(.subheadline)\n                                .foregroundColor(.cyan)\n                            }\n                        }\n                        \n                        // Sign In Button\n                        VStack(spacing: 16) {\n                            Button(action: signIn) {\n                                HStack {\n                                    if isLoading {\n                                        ProgressView()\n                                            .progressViewStyle(CircularProgressViewStyle(tint: .white))\n                                            .scaleEffect(0.8)\n                                    }\n                                    Text(isLoading ? "Signing In..." : "Sign In")\n                                        .font(.headline)\n                                        .fontWeight(.semibold)\n                                }\n                                .frame(maxWidth: .infinity)\n                                .padding()\n                                .background(\n                                    LinearGradient(\n                                        colors: [Color.purple, Color.purple.opacity(0.8)],\n                                        startPoint: .leading,\n                                        endPoint: .trailing\n                                    )\n                                )\n                                .foregroundColor(.white)\n                                .cornerRadius(12)\n                            }\n                            .disabled(isLoading || !isFormValid)\n                            .opacity(isFormValid ? 1.0 : 0.6)\n                            \n                            // Divider\n                            HStack {\n                                Rectangle()\n                                    .fill(Color.white.opacity(0.3))\n                                    .frame(height: 1)\n                                \n                                Text("or")\n                                    .font(.subheadline)\n                                    .foregroundColor(.white.opacity(0.6))\n                                    .padding(.horizontal)\n                                \n                                Rectangle()\n                                    .fill(Color.white.opacity(0.3))\n                                    .frame(height: 1)\n                            }\n                            \n                            // Social Sign In\n                            VStack(spacing: 12) {\n                                SocialSignInButton(\n                                    title: "Continue with Apple",\n                                    icon: "apple.logo",\n                                    backgroundColor: .black,\n                                    action: signInWithApple\n                                )\n                                \n                                SocialSignInButton(\n                                    title: "Continue with Google",\n                                    icon: "globe",\n                                    backgroundColor: .blue,\n                                    action: signInWithGoogle\n                                )\n                            }\n                        }\n                        \n                        // Sign Up Link\n                        HStack {\n                            Text("Don't have an account?")\n                                .foregroundColor(.white.opacity(0.7))\n                            \n                            Button("Sign Up") {\n                                isPresented = false\n                                // Open sign up (handled by parent)\n                            }\n                            .foregroundColor(.cyan)\n                            .fontWeight(.semibold)\n                        }\n                        .padding(.bottom, 40)\n                    }\n                    .padding(.horizontal, 24)\n                }\n            }\n            .navigationBarHidden(true)\n            .overlay(alignment: .topTrailing) {\n                Button("Close") {\n                    isPresented = false\n                }\n                .font(.subheadline)\n                .foregroundColor(.white.opacity(0.7))\n                .padding()\n            }\n        }\n        .alert("Error", isPresented: $showingError) {\n            Button("OK") { }\n        } message: {\n            Text(errorMessage)\n        }\n        .sheet(isPresented: $showingForgotPassword) {\n            ForgotPasswordView()\n        }\n    }\n    \n    private var backgroundGradient: some View {\n        LinearGradient(\n            colors: [\n                Color.black,\n                Color(red: 0.05, green: 0.05, blue: 0.15),\n                Color.black\n            ],\n            startPoint: .topLeading,\n            endPoint: .bottomTrailing\n        )\n        .ignoresSafeArea()\n    }\n    \n    private var isFormValid: Bool {\n        !email.isEmpty && email.contains("@") && password.count >= 6\n    }\n    \n    private func signIn() {\n        guard isFormValid else { return }\n        \n        isLoading = true\n        \n        Task {\n            do {\n                try await clerkManager.signIn(email: email, password: password)\n                await MainActor.run {\n                    isPresented = false\n                    isLoading = false\n                }\n            } catch {\n                await MainActor.run {\n                    errorMessage = clerkManager.handleError(error)\n                    showingError = true\n                    isLoading = false\n                }\n            }\n        }\n    }\n    \n    private func signInWithApple() {\n        isLoading = true\n        \n        Task {\n            do {\n                try await clerkManager.signInWithApple()\n                await MainActor.run {\n                    isPresented = false\n                    isLoading = false\n                }\n            } catch {\n                await MainActor.run {\n                    errorMessage = clerkManager.handleError(error)\n                    showingError = true\n                    isLoading = false\n                }\n            }\n        }\n    }\n    \n    private func signInWithGoogle() {\n        isLoading = true\n        \n        Task {\n            do {\n                try await clerkManager.signInWithGoogle()\n                await MainActor.run {\n                    isPresented = false\n                    isLoading = false\n                }\n            } catch {\n                await MainActor.run {\n                    errorMessage = clerkManager.handleError(error)\n                    showingError = true\n                    isLoading = false\n                }\n            }\n        }\n    }\n}\n\nstruct SocialSignInButton: View {\n    let title: String\n    let icon: String\n    let backgroundColor: Color\n    let action: () -> Void\n    \n    var body: some View {\n        Button(action: action) {\n            HStack(spacing: 12) {\n                Image(systemName: icon)\n                    .font(.title3)\n                    .foregroundColor(.white)\n                \n                Text(title)\n                    .font(.subheadline)\n                    .fontWeight(.medium)\n                    .foregroundColor(.white)\n            }\n            .frame(maxWidth: .infinity)\n            .padding()\n            .background(\n                RoundedRectangle(cornerRadius: 12)\n                    .fill(backgroundColor)\n                    .overlay(\n                        RoundedRectangle(cornerRadius: 12)\n                            .stroke(Color.white.opacity(0.2), lineWidth: 1)\n                    )\n            )\n        }\n    }\n}\n\n#Preview {\n    SignInView(isPresented: .constant(true))\n}"